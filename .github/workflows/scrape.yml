name: Scrape

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  scrapers:
    runs-on: ubuntu-latest
    outputs:
      scrapers: ${{ steps.list.outputs.scrapers }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install pipenv
        run: pipx install pipenv
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Run pipenv install
        run: |-
          pipenv install
          pipenv update warn-scraper
      - id: list
        name: List scrapers
        run: echo ::set-output name=scrapers::[\"$(pipenv run python cli.py --list | sed 's/,/","/g')\"]
  scrape:
    needs: scrapers
    strategy:
      fail-fast: false
      matrix:
        scraper: ${{fromJson(needs.scrapers.outputs.scrapers)}}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Checkout data
        uses: actions/checkout@v2
        with:
          ref: combined
          path: data
      - name: Install pipenv
        run: pipx install pipenv
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Run pipenv install
        run: |-
          pipenv install
          pipenv update warn-scraper
      - name: Clear logs
        run: |
          rm -rf data/logs || true
          mkdir -p data/logs || true
      - name: Clear the cassettes
        if: ${{ github.event_name != 'push' }}
        env:
          SCRAPER: ${{ matrix.scraper }}
        run: |-
          rm data/cassettes/${{ env.SCRAPER }}.yaml || true
      - name: Scrape
        if: ${{ github.event_name == 'push' }}
        env:
          SCRAPER: ${{ matrix.scraper }}
          LOGLEVEL: DEBUG
        run: |-
          pipenv run python cli.py ${{ env.SCRAPER }}
          ! cp /home/runner/.warn-scraper/logs/* data/logs/
      - name: Commit and push
        env:
          SCRAPER: ${{ matrix.scraper }}
        if: always()
        run: |-
          cd ./data
          git config user.name "WARN scraper bot"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "${{ env.SCRAPER }} - ${timestamp}" || exit 0
          git push origin ${{ env.SCRAPER }} -f

  combine:
    needs: [scrapers,scrape]
    if: always()

    runs-on: ubuntu-latest

    steps:
      - name: Checkout combined branch
        uses: actions/checkout@v2
        with:
          ref: combined
      - name: Merge the branches
        env:
          SCRAPERS: ${{join(fromJson(needs.scrapers.outputs.scrapers), ' ')}}
        run: |-
          git config user.name "WARN scraper bot"
          git config user.email "actions@users.noreply.github.com"
          git config --global pull.rebase false
          git pull origin ${{ env.SCRAPERS }}
      - name: Push
        run: |-
          git push origin combined
  