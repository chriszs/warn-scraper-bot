name: Scrape

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  scrapers:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.matrix }}
    steps:
    - id: list
      run: echo "::set-output name=scrapers::[\"$(python cli.py --list | sed 's/,/","/g')\"]"
  scrape:
    needs: scrapers
    strategy:
      fail-fast: false
      matrix:
        scraper: ${{fromJson(needs.scrapers.outputs.scrapers)}}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout data
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.state }}
          path: data
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install warn-scraper
      - name: Clear logs
        run: |
          rm -rf data/logs || true
          mkdir -p data/logs || true
      - name: Replay scraping
        if: ${{ github.event_name == 'push' }}
        env:
          SCRAPER: ${{ matrix.scrape }}
          LOGLEVEL: DEBUG
        run: |-
          warn-scraper ${{ env.SCRAPER }} --log-level ${{ env.LOGLEVEL }}
          ! cp /home/runner/.warn-scraper/logs/* data/logs/
      - name: Live scrape
        if: ${{ github.event_name != 'push' }}
        env:
          SCRAPER: ${{ matrix.scrape }}
          LOGLEVEL: DEBUG
        run: |-
          warn-scraper ${{ env.SCRAPER }} --log-level ${{ env.LOGLEVEL }} --record-mode all
          ! cp /home/runner/.warn-scraper/logs/* data/logs/
      - name: Commit and push
        env:
          SCRAPER: ${{ matrix.scraper }}
        if: always()
        run: |-
          cd ./data
          git config user.name "WARN scraper bot"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "${{ env.SCRAPER }} - ${timestamp}" || exit 0
          git push
